{"version":3,"mappings":"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","names":["useI18n","createUseI18n","kalbeLogoUrl","Template","props","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","showUsernameNode","infoNode","kcContext","i18n","doUseDefaultCss","classes","children","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","isReady","usePrepareTemplate","useState","jsxs","jsx","clsx","assert","languageTag","Fragment","Login","lazy","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","__vitePreload","KcApp","Suspense","Fallback"],"sources":["../../src/keycloak-theme/login/i18n.ts","../../src/keycloak-theme/login/assets/1200px-Kalbe_Farma.svg.png","../../src/keycloak-theme/login/Template.tsx","../../src/keycloak-theme/login/KcApp.tsx"],"sourcesContent":["import { createUseI18n } from \"keycloakify/login\";\n\nexport const { useI18n } = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    en: {\n        alphanumericalCharsOnly: \"Only alphanumerical characters\",\n        gender: \"Gender\",\n        // Here we overwrite the default english value for the message \"doForgotPassword\"\n        // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n        doForgotPassword: \"I forgot my password\",\n        invalidUserMessage: \"Invalid username or password. (this message was overwrite in the theme)\"\n    },\n    fr: {\n        /* spell-checker: disable */\n        alphanumericalCharsOnly: \"Caractère alphanumérique uniquement\",\n        gender: \"Genre\",\n        doForgotPassword: \"J'ai oublié mon mot de passe\",\n        invalidUserMessage: \"Nom d'utilisateur ou mot de passe invalide. (ce message a été écrasé dans le thème)\"\n        /* spell-checker: enable */\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","export default \"__VITE_ASSET__4x$LyPTq__\"","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport { useState } from \"react\";\nimport { assert } from \"keycloakify/tools/assert\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { usePrepareTemplate } from \"keycloakify/lib/usePrepareTemplate\";\nimport { type TemplateProps } from \"keycloakify/login/TemplateProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"./kcContext\";\nimport type { I18n } from \"./i18n\";\n// import keycloakifyLogoPngUrl from \"./assets/keycloakify-logo.png\";\n// import { PUBLIC_URL } from \"../../PUBLIC_URL\";\nimport kalbeLogoUrl from \"./assets/1200px-Kalbe_Farma.svg.png\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n  const {\n    displayInfo = false,\n    displayMessage = true,\n    displayRequiredFields = false,\n    displayWide = false,\n    showAnotherWayIfPresent = true,\n    // headerNode,\n    showUsernameNode = null,\n    infoNode = null,\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    classes,\n    children,\n  } = props;\n\n  const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n  const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } =\n    i18n;\n\n  const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext;\n\n  const { isReady } = usePrepareTemplate({\n    doFetchDefaultThemeResources: doUseDefaultCss,\n    styles: [\n      `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n      `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n      `${url.resourcesCommonPath}/lib/zocial/zocial.css`,\n      `${url.resourcesPath}/css/login.css`,\n    ],\n    htmlClassName: getClassName(\"kcHtmlClass\"),\n    bodyClassName: getClassName(\"kcBodyClass\"),\n  });\n\n  useState(() => {\n    document.title = i18n.msgStr(\"loginTitle\", kcContext.realm.displayName);\n  });\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <div className={getClassName(\"kcLoginClass\")}>\n      <div id=\"kc-header\" className={getClassName(\"kcHeaderClass\")}>\n        <div\n          id=\"kc-header-wrapper\"\n          className={getClassName(\"kcHeaderWrapperClass\")}\n          style={{ fontFamily: '\"Work Sans\"' }}\n        >\n          {/* \n                        This is just to show you how it can be done but this is not the best option for importing assets.\n                        See: https://docs.keycloakify.dev/importing-assets#importing-custom-assets\n                    */}\n          {/* <img src={`${PUBLIC_URL}/keycloakify-logo.png`} alt=\"Keycloakify logo\" width={50} /> */}\n          {/* {msg(\"loginTitleHtml\", realm.displayNameHtml)}!!! */}\n          {/* This is the preferred way to use assets */}\n          {/* <img src={kalbeLogoUrl} alt=\"Keycloakify logo\" width={50} /> */}\n        </div>\n      </div>\n\n      <div\n        className={clsx(\n          getClassName(\"kcFormCardClass\"),\n          displayWide && getClassName(\"kcFormCardAccountClass\")\n        )}\n      >\n        <header className={getClassName(\"kcFormHeaderClass\")}>\n          {realm.internationalizationEnabled &&\n            (assert(locale !== undefined), true) &&\n            locale.supported.length > 1 && (\n              <div id=\"kc-locale\">\n                <div\n                  id=\"kc-locale-wrapper\"\n                  className={getClassName(\"kcLocaleWrapperClass\")}\n                >\n                  <div className=\"kc-dropdown\" id=\"kc-locale-dropdown\">\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                    <a href=\"#\" id=\"kc-current-locale-link\">\n                      {labelBySupportedLanguageTag[currentLanguageTag]}\n                    </a>\n                    <ul>\n                      {locale.supported.map(({ languageTag }) => (\n                        <li key={languageTag} className=\"kc-dropdown-item\">\n                          {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                          <a href=\"#\" onClick={() => changeLocale(languageTag)}>\n                            {labelBySupportedLanguageTag[languageTag]}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n          {!(\n            auth !== undefined &&\n            auth.showUsername &&\n            !auth.showResetCredentials\n          ) ? (\n            displayRequiredFields ? (\n              <div className={getClassName(\"kcContentWrapperClass\")}>\n                <div\n                  className={clsx(\n                    getClassName(\"kcLabelWrapperClass\"),\n                    \"subtitle\"\n                  )}\n                >\n                  <span className=\"subtitle\">\n                    <span className=\"required\">*</span>\n                    {msg(\"requiredFields\")}\n                  </span>\n                </div>\n                <div className=\"header-page-login col-md-12\">\n                  {/* <h1 id=\"kc-page-title\">{headerNode}</h1> */}\n                  <img\n                    id=\"kalbe-logo\"\n                    src={kalbeLogoUrl}\n                    alt=\"Keycloakify logo\"\n                    width={120}\n                  />\n                  <h1 id=\"kc-page-title\">Welcome to Werum</h1>\n                </div>\n              </div>\n            ) : (\n              <div className=\"header-page-login col-md-12\">\n                <img\n                  id=\"kalbe-logo\"\n                  src={kalbeLogoUrl}\n                  alt=\"Keycloakify logo\"\n                  width={120}\n                />\n                <h1 id=\"kc-page-title\">Welcome to Werum</h1>\n                <h3 id=\"kc-page-text\">\n                  Please sign-in to access Werum keycloak\n                </h3>\n              </div>\n              // <h1 id=\"kc-page-title\">{headerNode}</h1>\n              // <h1 id=\"kc-page-title\">Kalbe DCM4CHEE</h1>\n            )\n          ) : displayRequiredFields ? (\n            <div className={getClassName(\"kcContentWrapperClass\")}>\n              <div\n                className={clsx(\n                  getClassName(\"kcLabelWrapperClass\"),\n                  \"subtitle\"\n                )}\n              >\n                <span className=\"subtitle\">\n                  <span className=\"required\">*</span> {msg(\"requiredFields\")}\n                </span>\n              </div>\n              <div className=\"col-md-10\">\n                {showUsernameNode}\n                <div className={getClassName(\"kcFormGroupClass\")}>\n                  <div id=\"kc-username\">\n                    <label id=\"kc-attempted-username\">\n                      {auth?.attemptedUsername}\n                    </label>\n                    <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                      <div className=\"kc-login-tooltip\">\n                        <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                        <span className=\"kc-tooltip-text\">\n                          {msg(\"restartLoginTooltip\")}\n                        </span>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              {showUsernameNode}\n              <div className={getClassName(\"kcFormGroupClass\")}>\n                <div id=\"kc-username\">\n                  <label id=\"kc-attempted-username\">\n                    {auth?.attemptedUsername}\n                  </label>\n                  <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                    <div className=\"kc-login-tooltip\">\n                      <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                      <span className=\"kc-tooltip-text\">\n                        {msg(\"restartLoginTooltip\")}\n                      </span>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </>\n          )}\n        </header>\n        <div id=\"kc-content\">\n          <div id=\"kc-content-wrapper\">\n            {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n            {displayMessage &&\n              message !== undefined &&\n              (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                  {message.type === \"success\" && (\n                    <span\n                      className={getClassName(\"kcFeedbackSuccessIcon\")}\n                    ></span>\n                  )}\n                  {message.type === \"warning\" && (\n                    <span\n                      className={getClassName(\"kcFeedbackWarningIcon\")}\n                    ></span>\n                  )}\n                  {message.type === \"error\" && (\n                    <span\n                      className={getClassName(\"kcFeedbackErrorIcon\")}\n                    ></span>\n                  )}\n                  {message.type === \"info\" && (\n                    <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>\n                  )}\n                  <span\n                    className=\"kc-feedback-text\"\n                    dangerouslySetInnerHTML={{\n                      __html: message.summary,\n                    }}\n                  />\n                </div>\n              )}\n            {children}\n            {auth !== undefined &&\n              auth.showTryAnotherWayLink &&\n              showAnotherWayIfPresent && (\n                <form\n                  id=\"kc-select-try-another-way-form\"\n                  action={url.loginAction}\n                  method=\"post\"\n                  className={clsx(\n                    displayWide && getClassName(\"kcContentWrapperClass\")\n                  )}\n                >\n                  <div\n                    className={clsx(\n                      displayWide && [\n                        getClassName(\"kcFormSocialAccountContentClass\"),\n                        getClassName(\"kcFormSocialAccountClass\"),\n                      ]\n                    )}\n                  >\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                      <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\" />\n                      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                      <a\n                        href=\"#\"\n                        id=\"try-another-way\"\n                        onClick={() => {\n                          document.forms[\n                            \"kc-select-try-another-way-form\" as never\n                          ].submit();\n                          return false;\n                        }}\n                      >\n                        {msg(\"doTryAnotherWay\")}\n                      </a>\n                    </div>\n                  </div>\n                </form>\n              )}\n            {displayInfo && (\n              <div id=\"kc-info\" className={getClassName(\"kcSignUpClass\")}>\n                <div\n                  id=\"kc-info-wrapper\"\n                  className={getClassName(\"kcInfoAreaWrapperClass\")}\n                >\n                  {infoNode}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./KcApp.css\";\nimport { lazy, Suspense } from \"react\";\nimport Fallback, { type PageProps } from \"keycloakify/login\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\nimport Template from \"./Template\";\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"keycloakify/login/pages/Info\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n} satisfies PageProps[\"classes\"];\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // Removes those pages in you project. They are included to show you how to implement keycloak pages\n                    // that are not yes implemented by Keycloakify. \n                    // See: https://docs.keycloakify.dev/limitations#some-pages-still-have-the-default-theme.-why\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    // This is just an example to show you what is possible. You likely don't want to keep this as is. \n                    case \"info.ftl\": return (\n                        <Info\n                            {...{ kcContext, i18n, classes }}\n                            Template={lazy(() => import(\"keycloakify/login/Template\"))}\n                            doUseDefaultCss={true}\n                        />\n                    );\n                    default: return <Fallback {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n"],"file":"assets/KcApp-C5mv6aaX.js"}